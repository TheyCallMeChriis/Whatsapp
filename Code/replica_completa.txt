import pyodbc
import mysql.connector
from datetime import datetime

# -----------------------------------------
# CONEXI√ìN A SQL SERVER (AUTENTICACI√ìN WINDOWS)
# -----------------------------------------
try:
    sql_conn = pyodbc.connect(
        "DRIVER={ODBC Driver 17 for SQL Server};"
        "SERVER=localhost;"
        "DATABASE=MensajeriaBD;"
        "Trusted_Connection=yes"
    )
    sql_cursor = sql_conn.cursor()
    print("‚úÖ Conectado a SQL Server.")
except Exception as e:
    print("‚ùå Error al conectar con SQL Server:", e)
    exit()

# -----------------------------------------
# CONEXI√ìN A MYSQL
# -----------------------------------------
try:
    mysql_conn = mysql.connector.connect(
        host="localhost",
        user="root",
        password="27186627",
        database="MensajeriaReplica"
    )
    mysql_cursor = mysql_conn.cursor()
    print("‚úÖ Conectado a MySQL.")
except Exception as e:
    print("‚ùå Error al conectar con MySQL:", e)
    sql_conn.close()
    exit()

# -----------------------------------------
# REPLICACI√ìN COMPLETA
# -----------------------------------------
try:
    # Borrar datos existentes en destino
    mysql_cursor.execute("DELETE FROM Mensajes")
    mysql_cursor.execute("DELETE FROM Usuarios")
    print("üßπ Datos en MySQL eliminados.")

    # Replicar tabla Usuarios
    sql_cursor.execute("SELECT id, nombre, correo, contrasena, actualizado FROM Usuarios")
    usuarios = sql_cursor.fetchall()
    for row in usuarios:
        # Convertir el campo `actualizado` a formato string (si es datetime)
        actualizado = row[4].strftime('%Y-%m-%d %H:%M:%S') if isinstance(row[4], datetime) else row[4]
        mysql_cursor.execute(
            "INSERT INTO Usuarios (id, nombre, correo, contrasena, actualizado) VALUES (%s, %s, %s, %s, %s)",
            (row[0], row[1], row[2], row[3], actualizado)
        )
    print(f"üë§ {len(usuarios)} usuarios replicados.")

    # Replicar tabla Mensajes
    sql_cursor.execute("SELECT id, emisor_id, receptor_id, contenido, fecha_envio, actualizado FROM Mensajes")
    mensajes = sql_cursor.fetchall()
    for row in mensajes:
        # Convertir el campo `actualizado` a formato string (si es datetime)
        actualizado = row[5].strftime('%Y-%m-%d %H:%M:%S') if isinstance(row[5], datetime) else row[5]
        mysql_cursor.execute(
            "INSERT INTO Mensajes (id, emisor_id, receptor_id, contenido, fecha_envio, actualizado) VALUES (%s, %s, %s, %s, %s, %s)",
            (row[0], row[1], row[2], row[3], row[4], actualizado)
        )
    print(f"üí¨ {len(mensajes)} mensajes replicados.")

    # Confirmar cambios
    mysql_conn.commit()
    print("‚úÖ Replicaci√≥n completa realizada con √©xito.")

except Exception as e:
    print("‚ùå Error durante la replicaci√≥n:", e)

# -----------------------------------------
# CERRAR CONEXIONES
# -----------------------------------------
#sql_conn.close()
#mysql_conn.close()
print("üîí Conexiones cerradas.")
#:::::